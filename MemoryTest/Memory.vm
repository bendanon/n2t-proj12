function Memory.init 0
push constant 2048
pop static 0
push static 0
push constant 16383
push constant 2048
sub
push constant 2
sub
call Memory.poke 2
pop temp 0
push constant 0
return
function Memory.peek 0
push constant 0
pop static 1
push argument 0
push static 1
add
pop pointer 1
push that 0
return
function Memory.poke 0
push constant 0
pop static 1
push argument 0
push static 1
add
push argument 1
pop temp 0
pop pointer 1
push temp 0
pop that 0
push constant 0
return
function Memory.printList 2
push static 0
pop local 0
label WHILE_EXP0
push local 0
push constant 0
eq
not
not
if-goto WHILE_END0
push local 1
push local 0
call Memory.peek 1
add
pop local 1
push local 0
push constant 1
add
call Memory.peek 1
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Memory._alloc 6
push static 0
call Memory.peek 1
pop local 4
push local 4
push argument 0
lt
not
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push static 0
pop local 0
push local 0
push constant 1
add
call Memory.peek 1
pop local 5
push local 5
push constant 0
eq
not
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push local 5
push constant 1
add
call Memory.peek 1
pop local 5
label IF_FALSE1
push local 4
push argument 0
sub
pop local 2
push static 0
push argument 0
add
push constant 1
add
pop static 0
push static 0
push local 2
call Memory.poke 2
pop temp 0
push static 0
push constant 1
add
push local 5
call Memory.poke 2
pop temp 0
goto IF_END0
label IF_FALSE0
push static 0
pop local 3
push local 3
push constant 1
add
call Memory.peek 1
pop local 0
push local 0
call Memory.peek 1
pop local 4
label WHILE_EXP0
push local 0
push constant 0
eq
not
push local 4
and
push argument 0
lt
not
if-goto WHILE_END0
push local 0
pop local 3
push local 0
push constant 1
add
call Memory.peek 1
pop local 0
push local 0
push constant 0
eq
if-goto IF_TRUE2
goto IF_FALSE2
label IF_TRUE2
push constant 0
return
label IF_FALSE2
push local 0
call Memory.peek 1
pop local 4
goto WHILE_EXP0
label WHILE_END0
push local 4
push argument 0
sub
push constant 2
sub
pop local 2
push local 2
push constant 0
gt
if-goto IF_TRUE3
goto IF_FALSE3
label IF_TRUE3
push local 0
push local 2
call Memory.poke 2
pop temp 0
push local 0
push local 2
add
pop local 0
goto IF_END3
label IF_FALSE3
push local 3
push constant 1
add
push local 0
push constant 1
add
call Memory.peek 1
call Memory.poke 2
pop temp 0
label IF_END3
label IF_END0
push local 0
push argument 0
call Memory.poke 2
pop temp 0
push local 0
push constant 1
add
return
function Memory.alloc 1
push argument 0
call Memory._alloc 1
pop local 0
push local 0
push constant 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
call Memory.deFrag 0
pop temp 0
push argument 0
call Memory._alloc 1
pop local 0
push local 0
push constant 0
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
return
label IF_FALSE1
label IF_FALSE0
push local 0
return
function Memory.deAlloc 3
push argument 0
push static 0
lt
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push argument 0
push static 0
call Memory.poke 2
pop temp 0
push argument 0
push constant 1
sub
pop static 0
goto IF_END0
label IF_FALSE0
push static 0
pop local 1
push local 1
push constant 1
add
call Memory.peek 1
pop local 0
label WHILE_EXP0
push local 0
push constant 0
eq
not
push local 1
push argument 0
lt
push argument 0
and
push local 0
lt
not
and
not
if-goto WHILE_END0
push local 0
pop local 1
push local 0
push constant 1
add
call Memory.peek 1
pop local 0
goto WHILE_EXP0
label WHILE_END0
push local 1
push constant 1
add
push argument 0
push constant 1
sub
call Memory.poke 2
pop temp 0
push argument 0
push local 0
call Memory.poke 2
pop temp 0
label IF_END0
push constant 0
return
function Memory.deFrag 5
push constant 1
pop local 4
push static 0
pop local 1
push local 1
push constant 1
add
call Memory.peek 1
pop local 0
label WHILE_EXP0
push local 0
push constant 0
eq
not
not
if-goto WHILE_END0
push local 0
push constant 1
add
call Memory.peek 1
pop local 2
push local 1
call Memory.peek 1
pop local 3
push local 1
push local 3
add
push local 4
add
push local 0
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
push local 3
push local 0
call Memory.peek 1
add
call Memory.poke 2
pop temp 0
push local 1
push constant 1
add
push local 2
call Memory.poke 2
pop temp 0
push local 4
push constant 1
add
pop local 4
goto IF_END0
label IF_FALSE0
call Output.println 0
pop temp 0
push local 1
call Output.printInt 1
pop temp 0
call Output.println 0
pop temp 0
push local 3
call Output.printInt 1
pop temp 0
call Output.println 0
pop temp 0
push local 4
call Output.printInt 1
pop temp 0
call Output.println 0
pop temp 0
push local 0
call Output.printInt 1
pop temp 0
call Output.println 0
pop temp 0
push local 0
pop local 1
label IF_END0
push local 2
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
